{"remainingRequest":"C:\\Projects\\projeto-ranek\\node_modules\\babel-loader\\lib\\index.js!C:\\Projects\\projeto-ranek\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Projects\\projeto-ranek\\src\\helpers.js","dependencies":[{"path":"C:\\Projects\\projeto-ranek\\src\\helpers.js","mtime":1691375471271},{"path":"C:\\Projects\\projeto-ranek\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\projeto-ranek\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Projects\\projeto-ranek\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"C:\\\\Projects\\\\projeto-ranek\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nexport function serialize(obj) {\n  var queryString = \"\";\n\n  for (var key in obj) {\n    queryString += \"&\".concat(key, \"=\").concat(obj[key]);\n  }\n\n  return queryString;\n}\nexport function mapFields(options) {\n  var object = {};\n\n  var _loop = function _loop(x) {\n    var field = [options.fields[x]];\n    object[field] = {\n      get: function get() {\n        return this.$store.state[options.base][field];\n      },\n      set: function set(value) {\n        this.$store.commit(options.mutation, _defineProperty({}, field, value));\n      }\n    };\n  };\n\n  for (var x = 0; x < options.fields.length; x++) {\n    _loop(x);\n  }\n\n  return object;\n}",{"version":3,"sources":["C:\\Projects\\projeto-ranek\\src\\helpers.js"],"names":["serialize","obj","queryString","key","mapFields","options","object","x","field","fields","get","$store","state","base","set","value","commit","mutation","length"],"mappings":";AAAA,OAAO,SAASA,SAAT,CAAmBC,GAAnB,EAAwB;AAC3B,MAAIC,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,GAAT,IAAgBF,GAAhB,EAAqB;AACjBC,IAAAA,WAAW,eAAQC,GAAR,cAAeF,GAAG,CAACE,GAAD,CAAlB,CAAX;AACH;;AACD,SAAOD,WAAP;AACH;AAED,OAAO,SAASE,SAAT,CAAmBC,OAAnB,EAA4B;AAC/B,MAAMC,MAAM,GAAG,EAAf;;AAD+B,6BAEtBC,CAFsB;AAG3B,QAAMC,KAAK,GAAG,CAACH,OAAO,CAACI,MAAR,CAAeF,CAAf,CAAD,CAAd;AACAD,IAAAA,MAAM,CAACE,KAAD,CAAN,GAAgB;AACZE,MAAAA,GADY,iBACN;AACF,eAAO,KAAKC,MAAL,CAAYC,KAAZ,CAAkBP,OAAO,CAACQ,IAA1B,EAAgCL,KAAhC,CAAP;AACH,OAHW;AAIZM,MAAAA,GAJY,eAIRC,KAJQ,EAID;AACP,aAAKJ,MAAL,CAAYK,MAAZ,CAAmBX,OAAO,CAACY,QAA3B,sBACKT,KADL,EACaO,KADb;AAGH;AARW,KAAhB;AAJ2B;;AAE/B,OAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACI,MAAR,CAAeS,MAAnC,EAA2CX,CAAC,EAA5C,EAAgD;AAAA,UAAvCA,CAAuC;AAY/C;;AACD,SAAOD,MAAP;AACH","sourcesContent":["export function serialize(obj) {\r\n    let queryString = \"\";\r\n    for (let key in obj) {\r\n        queryString += `&${key}=${obj[key]}`;\r\n    }\r\n    return queryString\r\n}\r\n\r\nexport function mapFields(options) {\r\n    const object = {};\r\n    for (let x = 0; x < options.fields.length; x++) {\r\n        const field = [options.fields[x]];\r\n        object[field] = {\r\n            get() {\r\n                return this.$store.state[options.base][field];\r\n            },\r\n            set(value) {\r\n                this.$store.commit(options.mutation, {\r\n                    [field]: value\r\n                });\r\n            }\r\n        };\r\n    }\r\n    return object;\r\n}"]}]}